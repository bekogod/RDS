{
  "header_types" : [
    {
      "name" : "scalars_0",
      "id" : 0,
      "fields" : [
        ["tmp", 32, false],
        ["tmp_0", 32, false],
        ["tmp_1", 16, false],
        ["tmp_2", 16, false],
        ["tmp_3", 8, false],
        ["tmp_4", 32, false],
        ["tmp_5", 32, false],
        ["tmp_6", 16, false],
        ["tmp_7", 16, false],
        ["tmp_8", 8, false],
        ["tmp_9", 32, false],
        ["tmp_10", 32, false],
        ["tmp_11", 16, false],
        ["tmp_12", 16, false],
        ["tmp_13", 8, false],
        ["tmp_14", 32, false],
        ["tmp_15", 32, false],
        ["tmp_16", 16, false],
        ["tmp_17", 16, false],
        ["tmp_18", 8, false],
        ["reg_pos_one_0", 32, false],
        ["reg_pos_two_0", 32, false],
        ["reg_val_one_0", 1, false],
        ["reg_val_two_0", 1, false],
        ["direction_0", 1, false],
        ["allow_port_0", 1, false],
        ["hasReturned", 1, false],
        ["metadata.tunnel", 1, false],
        ["metadata.nextHopMac", 48, false],
        ["_padding_0", 2, false]
      ]
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "fields" : [
        ["ingress_port", 9, false],
        ["egress_spec", 9, false],
        ["egress_port", 9, false],
        ["instance_type", 32, false],
        ["packet_length", 32, false],
        ["enq_timestamp", 32, false],
        ["enq_qdepth", 19, false],
        ["deq_timedelta", 32, false],
        ["deq_qdepth", 19, false],
        ["ingress_global_timestamp", 48, false],
        ["egress_global_timestamp", 48, false],
        ["mcast_grp", 16, false],
        ["egress_rid", 16, false],
        ["checksum_error", 1, false],
        ["parser_error", 32, false],
        ["priority", 3, false],
        ["_padding", 3, false]
      ]
    },
    {
      "name" : "ethernet_t",
      "id" : 2,
      "fields" : [
        ["dstAddr", 48, false],
        ["srcAddr", 48, false],
        ["etherType", 16, false]
      ]
    },
    {
      "name" : "ipv4_t",
      "id" : 3,
      "fields" : [
        ["version", 4, false],
        ["ihl", 4, false],
        ["diffserv", 8, false],
        ["totalLen", 16, false],
        ["identification", 16, false],
        ["flags", 3, false],
        ["fragOffset", 13, false],
        ["ttl", 8, false],
        ["protocol", 8, false],
        ["hdrChecksum", 16, false],
        ["srcAddr", 32, false],
        ["dstAddr", 32, false]
      ]
    },
    {
      "name" : "udp_t",
      "id" : 4,
      "fields" : [
        ["srcPort", 16, false],
        ["dstPort", 16, false],
        ["length", 16, false],
        ["checksum", 16, false]
      ]
    },
    {
      "name" : "label_t",
      "id" : 5,
      "fields" : [
        ["label", 16, false],
        ["bos", 1, false],
        ["padding", 7, false]
      ]
    }
  ],
  "headers" : [
    {
      "name" : "scalars",
      "id" : 0,
      "header_type" : "scalars_0",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "standard_metadata",
      "id" : 1,
      "header_type" : "standard_metadata",
      "metadata" : true,
      "pi_omit" : true
    },
    {
      "name" : "ethernet",
      "id" : 2,
      "header_type" : "ethernet_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "ipv4",
      "id" : 3,
      "header_type" : "ipv4_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "udp",
      "id" : 4,
      "header_type" : "udp_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "mslp_labels[0]",
      "id" : 5,
      "header_type" : "label_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "mslp_labels[1]",
      "id" : 6,
      "header_type" : "label_t",
      "metadata" : false,
      "pi_omit" : true
    },
    {
      "name" : "mslp_labels[2]",
      "id" : 7,
      "header_type" : "label_t",
      "metadata" : false,
      "pi_omit" : true
    }
  ],
  "header_stacks" : [
    {
      "name" : "mslp_labels",
      "id" : 0,
      "header_type" : "label_t",
      "size" : 3,
      "header_ids" : [5, 6, 7]
    }
  ],
  "header_union_types" : [],
  "header_unions" : [],
  "header_union_stacks" : [],
  "field_lists" : [],
  "errors" : [
    ["NoError", 0],
    ["PacketTooShort", 1],
    ["NoMatch", 2],
    ["StackOutOfBounds", 3],
    ["HeaderTooShort", 4],
    ["ParserTimeout", 5],
    ["ParserInvalidArgument", 6]
  ],
  "enums" : [],
  "parsers" : [
    {
      "name" : "parser",
      "id" : 0,
      "init_state" : "start",
      "parse_states" : [
        {
          "name" : "start",
          "id" : 0,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ethernet"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x0800",
              "mask" : null,
              "next_state" : "parse_ipv4"
            },
            {
              "type" : "hexstr",
              "value" : "0x88b5",
              "mask" : null,
              "next_state" : "parse_mslp"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            }
          ]
        },
        {
          "name" : "parse_ipv4",
          "id" : 1,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "ipv4"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "hexstr",
              "value" : "0x11",
              "mask" : null,
              "next_state" : "udp"
            },
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : [
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ]
        },
        {
          "name" : "udp",
          "id" : 2,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "regular",
                  "value" : "udp"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : null
            }
          ],
          "transition_key" : []
        },
        {
          "name" : "parse_mslp",
          "id" : 3,
          "parser_ops" : [
            {
              "parameters" : [
                {
                  "type" : "stack",
                  "value" : "mslp_labels"
                }
              ],
              "op" : "extract"
            }
          ],
          "transitions" : [
            {
              "type" : "default",
              "value" : null,
              "mask" : null,
              "next_state" : "parse_ipv4"
            }
          ],
          "transition_key" : []
        }
      ]
    }
  ],
  "parse_vsets" : [],
  "deparsers" : [
    {
      "name" : "deparser",
      "id" : 0,
      "source_info" : {
        "filename" : "p4/teste_r4.p4",
        "line" : 383,
        "column" : 8,
        "source_fragment" : "MyDeparser"
      },
      "order" : ["ethernet", "mslp_labels[0]", "mslp_labels[1]", "mslp_labels[2]", "ipv4", "udp"],
      "primitives" : []
    }
  ],
  "meter_arrays" : [],
  "counter_arrays" : [],
  "register_arrays" : [
    {
      "name" : "MyIngress.bloom_filter_1",
      "id" : 0,
      "source_info" : {
        "filename" : "p4/teste_r4.p4",
        "line" : 130,
        "column" : 27,
        "source_fragment" : "bloom_filter_1"
      },
      "size" : 4096,
      "bitwidth" : 1
    },
    {
      "name" : "MyIngress.bloom_filter_2",
      "id" : 1,
      "source_info" : {
        "filename" : "p4/teste_r4.p4",
        "line" : 131,
        "column" : 27,
        "source_fragment" : "bloom_filter_2"
      },
      "size" : 4096,
      "bitwidth" : 1
    }
  ],
  "calculations" : [
    {
      "name" : "calc",
      "id" : 0,
      "algo" : "crc16",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_0"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_1"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_2"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_3"]
        }
      ]
    },
    {
      "name" : "calc_0",
      "id" : 1,
      "algo" : "crc32",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_4"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_5"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_6"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_7"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_8"]
        }
      ]
    },
    {
      "name" : "calc_1",
      "id" : 2,
      "algo" : "crc16",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_9"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_10"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_11"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_12"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_13"]
        }
      ]
    },
    {
      "name" : "calc_2",
      "id" : 3,
      "algo" : "crc32",
      "input" : [
        {
          "type" : "field",
          "value" : ["scalars", "tmp_14"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_15"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_16"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_17"]
        },
        {
          "type" : "field",
          "value" : ["scalars", "tmp_18"]
        }
      ]
    },
    {
      "name" : "calc_3",
      "id" : 4,
      "source_info" : {
        "filename" : "p4/teste_r4.p4",
        "line" : 361,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "algo" : "csum16",
      "input" : [
        {
          "type" : "field",
          "value" : ["ipv4", "version"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ihl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "diffserv"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "totalLen"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "identification"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "flags"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "fragOffset"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "ttl"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "protocol"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "srcAddr"]
        },
        {
          "type" : "field",
          "value" : ["ipv4", "dstAddr"]
        }
      ]
    }
  ],
  "learn_lists" : [],
  "actions" : [
    {
      "name" : "NoAction",
      "id" : 0,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "NoAction",
      "id" : 1,
      "runtime_data" : [],
      "primitives" : []
    },
    {
      "name" : "MyIngress.drop",
      "id" : 2,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 138,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 3,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 138,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 4,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 138,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 5,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 138,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.drop",
      "id" : 6,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "mark_to_drop",
          "parameters" : [
            {
              "type" : "header",
              "value" : "standard_metadata"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 138,
            "column" : 8,
            "source_fragment" : "mark_to_drop(standard_metadata)"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.compute_hashes",
      "id" : 7,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 143,
            "column" : 59,
            "source_fragment" : "ipAddr1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_0"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 144,
            "column" : 59,
            "source_fragment" : "ipAddr2"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_1"]
            },
            {
              "type" : "field",
              "value" : ["udp", "srcPort"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 145,
            "column" : 59,
            "source_fragment" : "port1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_2"]
            },
            {
              "type" : "field",
              "value" : ["udp", "dstPort"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 146,
            "column" : 59,
            "source_fragment" : "port2"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_3"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 147,
            "column" : 59,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "reg_pos_one_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "calculation",
              "value" : "calc"
            },
            {
              "type" : "hexstr",
              "value" : "0x00001000"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 143,
            "column" : 7,
            "source_fragment" : "hash(reg_pos_one, HashAlgorithm.crc16, (bit<32>)0, {ipAddr1, ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_4"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 150,
            "column" : 59,
            "source_fragment" : "ipAddr1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_5"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 151,
            "column" : 59,
            "source_fragment" : "ipAddr2"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_6"]
            },
            {
              "type" : "field",
              "value" : ["udp", "srcPort"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 152,
            "column" : 59,
            "source_fragment" : "port1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_7"]
            },
            {
              "type" : "field",
              "value" : ["udp", "dstPort"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 153,
            "column" : 59,
            "source_fragment" : "port2"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_8"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 154,
            "column" : 59,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "reg_pos_two_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "calculation",
              "value" : "calc_0"
            },
            {
              "type" : "hexstr",
              "value" : "0x00001000"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 150,
            "column" : 7,
            "source_fragment" : "hash(reg_pos_two, HashAlgorithm.crc32, (bit<32>)0, {ipAddr1, ..."
          }
        }
      ]
    },
    {
      "name" : "MyIngress.compute_hashes",
      "id" : 8,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_9"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 143,
            "column" : 59,
            "source_fragment" : "ipAddr1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_10"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 144,
            "column" : 59,
            "source_fragment" : "ipAddr2"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_11"]
            },
            {
              "type" : "field",
              "value" : ["udp", "dstPort"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 145,
            "column" : 59,
            "source_fragment" : "port1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_12"]
            },
            {
              "type" : "field",
              "value" : ["udp", "srcPort"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 146,
            "column" : 59,
            "source_fragment" : "port2"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_13"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 147,
            "column" : 59,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "reg_pos_one_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "calculation",
              "value" : "calc_1"
            },
            {
              "type" : "hexstr",
              "value" : "0x00001000"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 143,
            "column" : 7,
            "source_fragment" : "hash(reg_pos_one, HashAlgorithm.crc16, (bit<32>)0, {ipAddr1, ..."
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_14"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "dstAddr"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 150,
            "column" : 59,
            "source_fragment" : "ipAddr1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_15"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "srcAddr"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 151,
            "column" : 59,
            "source_fragment" : "ipAddr2"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_16"]
            },
            {
              "type" : "field",
              "value" : ["udp", "dstPort"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 152,
            "column" : 59,
            "source_fragment" : "port1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_17"]
            },
            {
              "type" : "field",
              "value" : ["udp", "srcPort"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 153,
            "column" : 59,
            "source_fragment" : "port2"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "tmp_18"]
            },
            {
              "type" : "field",
              "value" : ["ipv4", "protocol"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 154,
            "column" : 59,
            "source_fragment" : "hdr.ipv4.protocol"
          }
        },
        {
          "op" : "modify_field_with_hash_based_offset",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "reg_pos_two_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00000000"
            },
            {
              "type" : "calculation",
              "value" : "calc_2"
            },
            {
              "type" : "hexstr",
              "value" : "0x00001000"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 150,
            "column" : 7,
            "source_fragment" : "hash(reg_pos_two, HashAlgorithm.crc32, (bit<32>)0, {ipAddr1, ..."
          }
        }
      ]
    },
    {
      "name" : "MyIngress.forward",
      "id" : 9,
      "runtime_data" : [
        {
          "name" : "egressPort",
          "bitwidth" : 9
        },
        {
          "name" : "nextHopMac",
          "bitwidth" : 48
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 159,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = egressPort"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "metadata.nextHopMac"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 160,
            "column" : 8,
            "source_fragment" : "meta.nextHopMac = nextHopMac"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 161,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.dstAddr = nextHopMac"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ipv4", "ttl"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "&",
                  "left" : {
                    "type" : "expression",
                    "value" : {
                      "op" : "+",
                      "left" : {
                        "type" : "field",
                        "value" : ["ipv4", "ttl"]
                      },
                      "right" : {
                        "type" : "hexstr",
                        "value" : "0xff"
                      }
                    }
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0xff"
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 162,
            "column" : 8,
            "source_fragment" : "hdr.ipv4.ttl = hdr.ipv4.ttl - 1"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.rewriteMacsForTunnel",
      "id" : 10,
      "runtime_data" : [
        {
          "name" : "srcAddr",
          "bitwidth" : 48
        },
        {
          "name" : "dstAddr",
          "bitwidth" : 48
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "dstAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 1
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 178,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.dstAddr = dstAddr"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 179,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.srcAddr = srcAddr"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.rewriteMacs",
      "id" : 11,
      "runtime_data" : [
        {
          "name" : "srcMac",
          "bitwidth" : 48
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "srcAddr"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 198,
            "column" : 8,
            "source_fragment" : "hdr.ethernet.srcAddr = srcMac"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.set_labels_tunnel1",
      "id" : 12,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mslp_labels[2]"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 221,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[2]"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mslp_labels[2]", "label"]
            },
            {
              "type" : "hexstr",
              "value" : "0x1010"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 221,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[2] = {0x1010"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mslp_labels[2]", "bos"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 221,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[2] = {0x1010, 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mslp_labels[2]", "padding"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 221,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[2] = {0x1010, 1, 0"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mslp_labels[2]"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 222,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[2].setValid()"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mslp_labels[1]"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 224,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[1]"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mslp_labels[1]", "label"]
            },
            {
              "type" : "hexstr",
              "value" : "0x2010"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 224,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[1] = {0x2010"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mslp_labels[1]", "bos"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 224,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[1] = {0x2010, 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mslp_labels[1]", "padding"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 224,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[1] = {0x2010, 0, 0"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mslp_labels[1]"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 225,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[1].setValid()"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mslp_labels[0]"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 227,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[0]"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mslp_labels[0]", "label"]
            },
            {
              "type" : "hexstr",
              "value" : "0x3010"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 227,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[0] = {0x3010"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mslp_labels[0]", "bos"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 227,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[0] = {0x3010, 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mslp_labels[0]", "padding"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 227,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[0] = {0x3010, 0, 0"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mslp_labels[0]"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 228,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[0].setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0003"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 230,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = 3"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.set_labels_tunnel2",
      "id" : 13,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mslp_labels[2]"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 235,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[2]"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mslp_labels[2]", "label"]
            },
            {
              "type" : "hexstr",
              "value" : "0x1010"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 235,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[2] = {0x1010"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mslp_labels[2]", "bos"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 235,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[2] = {0x1010, 1"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mslp_labels[2]", "padding"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 235,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[2] = {0x1010, 1, 0"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mslp_labels[2]"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 236,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[2].setValid()"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mslp_labels[1]"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 238,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[1]"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mslp_labels[1]", "label"]
            },
            {
              "type" : "hexstr",
              "value" : "0x6010"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 238,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[1] = {0x6010"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mslp_labels[1]", "bos"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 238,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[1] = {0x6010, 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mslp_labels[1]", "padding"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 238,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[1] = {0x6010, 0, 0"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mslp_labels[1]"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 239,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[1].setValid()"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mslp_labels[0]"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 242,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[0]"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mslp_labels[0]", "label"]
            },
            {
              "type" : "hexstr",
              "value" : "0x5010"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 242,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[0] = {0x5010"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mslp_labels[0]", "bos"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 242,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[0] = {0x5010, 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["mslp_labels[0]", "padding"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 242,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[0] = {0x5010, 0, 0"
          }
        },
        {
          "op" : "add_header",
          "parameters" : [
            {
              "type" : "header",
              "value" : "mslp_labels[0]"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 243,
            "column" : 8,
            "source_fragment" : "hdr.mslp_labels[0].setValid()"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["standard_metadata", "egress_spec"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0002"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 245,
            "column" : 8,
            "source_fragment" : "standard_metadata.egress_spec = 2"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.set_direction",
      "id" : 14,
      "runtime_data" : [
        {
          "name" : "dir",
          "bitwidth" : 1
        }
      ],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "direction_0"]
            },
            {
              "type" : "runtime_data",
              "value" : 0
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 261,
            "column" : 8,
            "source_fragment" : "direction = dir"
          }
        }
      ]
    },
    {
      "name" : "MyIngress.allow_predefined_port",
      "id" : 15,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "allow_port_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 278,
            "column" : 8,
            "source_fragment" : "allow_port = 1"
          }
        }
      ]
    },
    {
      "name" : "teste_r4l296",
      "id" : 16,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            },
            {
              "type" : "hexstr",
              "value" : "0x88b5"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 9,
            "column" : 26,
            "source_fragment" : "0x88B5; ..."
          }
        }
      ]
    },
    {
      "name" : "teste_r4l301",
      "id" : 17,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "pop",
          "parameters" : [
            {
              "type" : "header_stack",
              "value" : "mslp_labels"
            },
            {
              "type" : "hexstr",
              "value" : "0x1"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 301,
            "column" : 12,
            "source_fragment" : "hdr.mslp_labels.pop_front(1)"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["ethernet", "etherType"]
            },
            {
              "type" : "hexstr",
              "value" : "0x0800"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 8,
            "column" : 26,
            "source_fragment" : "0x800; ..."
          }
        }
      ]
    },
    {
      "name" : "teste_r4l309",
      "id" : 18,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : true
                  }
                }
              }
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 309,
            "column" : 12,
            "source_fragment" : "return"
          }
        }
      ]
    },
    {
      "name" : "act",
      "id" : 19,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "hasReturned"]
            },
            {
              "type" : "expression",
              "value" : {
                "type" : "expression",
                "value" : {
                  "op" : "b2d",
                  "left" : null,
                  "right" : {
                    "type" : "bool",
                    "value" : false
                  }
                }
              }
            }
          ]
        }
      ]
    },
    {
      "name" : "teste_r4l325",
      "id" : 20,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_1"
            },
            {
              "type" : "field",
              "value" : ["scalars", "reg_pos_one_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 325,
            "column" : 20,
            "source_fragment" : "bloom_filter_1.write(reg_pos_one, 1)"
          }
        },
        {
          "op" : "register_write",
          "parameters" : [
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_2"
            },
            {
              "type" : "field",
              "value" : ["scalars", "reg_pos_two_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x01"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 326,
            "column" : 20,
            "source_fragment" : "bloom_filter_2.write(reg_pos_two, 1)"
          }
        }
      ]
    },
    {
      "name" : "teste_r4l332",
      "id" : 21,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "reg_val_one_0"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_1"
            },
            {
              "type" : "field",
              "value" : ["scalars", "reg_pos_one_0"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 332,
            "column" : 24,
            "source_fragment" : "bloom_filter_1.read(reg_val_one, reg_pos_one)"
          }
        },
        {
          "op" : "register_read",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "reg_val_two_0"]
            },
            {
              "type" : "register_array",
              "value" : "MyIngress.bloom_filter_2"
            },
            {
              "type" : "field",
              "value" : ["scalars", "reg_pos_two_0"]
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 333,
            "column" : 24,
            "source_fragment" : "bloom_filter_2.read(reg_val_two, reg_pos_two)"
          }
        }
      ]
    },
    {
      "name" : "teste_r4l314",
      "id" : 22,
      "runtime_data" : [],
      "primitives" : [
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "direction_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 314,
            "column" : 12,
            "source_fragment" : "direction = 0"
          }
        },
        {
          "op" : "assign",
          "parameters" : [
            {
              "type" : "field",
              "value" : ["scalars", "allow_port_0"]
            },
            {
              "type" : "hexstr",
              "value" : "0x00"
            }
          ],
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 315,
            "column" : 12,
            "source_fragment" : "allow_port = 0"
          }
        }
      ]
    }
  ],
  "pipelines" : [
    {
      "name" : "ingress",
      "id" : 0,
      "source_info" : {
        "filename" : "p4/teste_r4.p4",
        "line" : 126,
        "column" : 8,
        "source_fragment" : "MyIngress"
      },
      "init_table" : "tbl_act",
      "tables" : [
        {
          "name" : "tbl_act",
          "id" : 0,
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [19],
          "actions" : ["act"],
          "base_default_next" : "node_3",
          "next_tables" : {
            "act" : "node_3"
          },
          "default_entry" : {
            "action_id" : 19,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_teste_r4l296",
          "id" : 1,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 296,
            "column" : 35,
            "source_fragment" : "="
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [16],
          "actions" : ["teste_r4l296"],
          "base_default_next" : "MyIngress.tunnel_label_selector",
          "next_tables" : {
            "teste_r4l296" : "MyIngress.tunnel_label_selector"
          },
          "default_entry" : {
            "action_id" : 16,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.tunnel_label_selector",
          "id" : 2,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 249,
            "column" : 10,
            "source_fragment" : "tunnel_label_selector"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 8,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [12, 13],
          "actions" : ["MyIngress.set_labels_tunnel1", "MyIngress.set_labels_tunnel2"],
          "base_default_next" : "MyIngress.forTunnelMacrewrite",
          "next_tables" : {
            "MyIngress.set_labels_tunnel1" : "MyIngress.forTunnelMacrewrite",
            "MyIngress.set_labels_tunnel2" : "MyIngress.forTunnelMacrewrite"
          },
          "default_entry" : {
            "action_id" : 12,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "MyIngress.forTunnelMacrewrite",
          "id" : 3,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 182,
            "column" : 10,
            "source_fragment" : "forTunnelMacrewrite"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "standard_metadata.egress_spec",
              "target" : ["standard_metadata", "egress_spec"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 512,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [10, 3],
          "actions" : ["MyIngress.rewriteMacsForTunnel", "MyIngress.drop"],
          "base_default_next" : "node_13",
          "next_tables" : {
            "MyIngress.rewriteMacsForTunnel" : "node_13",
            "MyIngress.drop" : "node_13"
          },
          "default_entry" : {
            "action_id" : 3,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_teste_r4l301",
          "id" : 4,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 301,
            "column" : 12,
            "source_fragment" : "hdr.mslp_labels.pop_front(1); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [17],
          "actions" : ["teste_r4l301"],
          "base_default_next" : "MyIngress.ipv4Lpm",
          "next_tables" : {
            "teste_r4l301" : "MyIngress.ipv4Lpm"
          },
          "default_entry" : {
            "action_id" : 17,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.ipv4Lpm",
          "id" : 5,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 165,
            "column" : 10,
            "source_fragment" : "ipv4Lpm"
          },
          "key" : [
            {
              "match_type" : "lpm",
              "name" : "hdr.ipv4.dstAddr",
              "target" : ["ipv4", "dstAddr"],
              "mask" : null
            }
          ],
          "match_type" : "lpm",
          "type" : "simple",
          "max_size" : 512,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [9, 2],
          "actions" : ["MyIngress.forward", "MyIngress.drop"],
          "base_default_next" : null,
          "next_tables" : {
            "__HIT__" : "MyIngress.internalMacLookup",
            "__MISS__" : "node_13"
          },
          "default_entry" : {
            "action_id" : 2,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "MyIngress.internalMacLookup",
          "id" : 6,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 201,
            "column" : 10,
            "source_fragment" : "internalMacLookup"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "standard_metadata.egress_spec",
              "target" : ["standard_metadata", "egress_spec"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 512,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [11, 4],
          "actions" : ["MyIngress.rewriteMacs", "MyIngress.drop"],
          "base_default_next" : "node_13",
          "next_tables" : {
            "MyIngress.rewriteMacs" : "node_13",
            "MyIngress.drop" : "node_13"
          },
          "default_entry" : {
            "action_id" : 4,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_drop",
          "id" : 7,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 308,
            "column" : 12,
            "source_fragment" : "drop()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [5],
          "actions" : ["MyIngress.drop"],
          "base_default_next" : "tbl_teste_r4l309",
          "next_tables" : {
            "MyIngress.drop" : "tbl_teste_r4l309"
          },
          "default_entry" : {
            "action_id" : 5,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_teste_r4l309",
          "id" : 8,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 309,
            "column" : 12,
            "source_fragment" : "return"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [18],
          "actions" : ["teste_r4l309"],
          "base_default_next" : "node_13",
          "next_tables" : {
            "teste_r4l309" : "node_13"
          },
          "default_entry" : {
            "action_id" : 18,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_teste_r4l314",
          "id" : 9,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 314,
            "column" : 22,
            "source_fragment" : "= 0; ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [22],
          "actions" : ["teste_r4l314"],
          "base_default_next" : "MyIngress.check_ports",
          "next_tables" : {
            "teste_r4l314" : "MyIngress.check_ports"
          },
          "default_entry" : {
            "action_id" : 22,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.check_ports",
          "id" : 10,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 264,
            "column" : 10,
            "source_fragment" : "check_ports"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "standard_metadata.ingress_port",
              "target" : ["standard_metadata", "ingress_port"],
              "mask" : null
            },
            {
              "match_type" : "exact",
              "name" : "standard_metadata.egress_spec",
              "target" : ["standard_metadata", "egress_spec"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [14, 0],
          "actions" : ["MyIngress.set_direction", "NoAction"],
          "base_default_next" : null,
          "next_tables" : {
            "__MISS__" : null,
            "__HIT__" : "node_17"
          },
          "default_entry" : {
            "action_id" : 0,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_compute_hashes",
          "id" : 11,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 318,
            "column" : 20,
            "source_fragment" : "compute_hashes(hdr.ipv4.srcAddr, hdr.ipv4.dstAddr, hdr.udp.srcPort, hdr.udp.dstPort)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [7],
          "actions" : ["MyIngress.compute_hashes"],
          "base_default_next" : "node_20",
          "next_tables" : {
            "MyIngress.compute_hashes" : "node_20"
          },
          "default_entry" : {
            "action_id" : 7,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_compute_hashes_0",
          "id" : 12,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 321,
            "column" : 20,
            "source_fragment" : "compute_hashes(hdr.ipv4.dstAddr, hdr.ipv4.srcAddr, hdr.udp.dstPort, hdr.udp.srcPort)"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [8],
          "actions" : ["MyIngress.compute_hashes"],
          "base_default_next" : "node_20",
          "next_tables" : {
            "MyIngress.compute_hashes" : "node_20"
          },
          "default_entry" : {
            "action_id" : 8,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_teste_r4l325",
          "id" : 13,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 325,
            "column" : 20,
            "source_fragment" : "bloom_filter_1.write(reg_pos_one, 1); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [20],
          "actions" : ["teste_r4l325"],
          "base_default_next" : null,
          "next_tables" : {
            "teste_r4l325" : null
          },
          "default_entry" : {
            "action_id" : 20,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "MyIngress.allowed_udp_ports",
          "id" : 14,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 281,
            "column" : 10,
            "source_fragment" : "allowed_udp_ports"
          },
          "key" : [
            {
              "match_type" : "exact",
              "name" : "hdr.udp.dstPort",
              "target" : ["udp", "dstPort"],
              "mask" : null
            }
          ],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 64,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [15, 1],
          "actions" : ["MyIngress.allow_predefined_port", "NoAction"],
          "base_default_next" : "node_24",
          "next_tables" : {
            "MyIngress.allow_predefined_port" : "node_24",
            "NoAction" : "node_24"
          },
          "default_entry" : {
            "action_id" : 1,
            "action_const" : false,
            "action_data" : [],
            "action_entry_const" : false
          }
        },
        {
          "name" : "tbl_teste_r4l332",
          "id" : 15,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 332,
            "column" : 24,
            "source_fragment" : "bloom_filter_1.read(reg_val_one, reg_pos_one); ..."
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [21],
          "actions" : ["teste_r4l332"],
          "base_default_next" : "node_26",
          "next_tables" : {
            "teste_r4l332" : "node_26"
          },
          "default_entry" : {
            "action_id" : 21,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        },
        {
          "name" : "tbl_drop_0",
          "id" : 16,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 335,
            "column" : 28,
            "source_fragment" : "drop()"
          },
          "key" : [],
          "match_type" : "exact",
          "type" : "simple",
          "max_size" : 1024,
          "with_counters" : false,
          "support_timeout" : false,
          "direct_meters" : null,
          "action_ids" : [6],
          "actions" : ["MyIngress.drop"],
          "base_default_next" : null,
          "next_tables" : {
            "MyIngress.drop" : null
          },
          "default_entry" : {
            "action_id" : 6,
            "action_const" : true,
            "action_data" : [],
            "action_entry_const" : true
          }
        }
      ],
      "action_profiles" : [],
      "conditionals" : [
        {
          "name" : "node_3",
          "id" : 0,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 295,
            "column" : 12,
            "source_fragment" : "hdr.ethernet.etherType == TYPE_IPV4"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["ethernet", "etherType"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x0800"
              }
            }
          },
          "true_next" : "tbl_teste_r4l296",
          "false_next" : "node_7"
        },
        {
          "name" : "node_7",
          "id" : 1,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 300,
            "column" : 17,
            "source_fragment" : "hdr.ethernet.etherType == TYPE_MSLP"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["ethernet", "etherType"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x88b5"
              }
            }
          },
          "true_next" : "tbl_teste_r4l301",
          "false_next" : "tbl_drop"
        },
        {
          "name" : "node_13",
          "id" : 2,
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "d2b",
              "left" : null,
              "right" : {
                "type" : "field",
                "value" : ["scalars", "hasReturned"]
              }
            }
          },
          "true_next" : null,
          "false_next" : "node_14"
        },
        {
          "name" : "node_14",
          "id" : 3,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 313,
            "column" : 12,
            "source_fragment" : "hdr.ipv4.isValid() && hdr.udp.isValid()"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "and",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["ipv4", "$valid$"]
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "d2b",
                  "left" : null,
                  "right" : {
                    "type" : "field",
                    "value" : ["udp", "$valid$"]
                  }
                }
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_teste_r4l314"
        },
        {
          "name" : "node_17",
          "id" : 4,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 317,
            "column" : 20,
            "source_fragment" : "direction == 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "direction_0"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00"
              }
            }
          },
          "true_next" : "tbl_compute_hashes",
          "false_next" : "tbl_compute_hashes_0"
        },
        {
          "name" : "node_20",
          "id" : 5,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 324,
            "column" : 20,
            "source_fragment" : "direction == 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "direction_0"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00"
              }
            }
          },
          "true_next" : "tbl_teste_r4l325",
          "false_next" : "node_22"
        },
        {
          "name" : "node_22",
          "id" : 6,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 328,
            "column" : 25,
            "source_fragment" : "direction == 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "direction_0"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x01"
              }
            }
          },
          "false_next" : null,
          "true_next" : "MyIngress.allowed_udp_ports"
        },
        {
          "name" : "node_24",
          "id" : 7,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 331,
            "column" : 24,
            "source_fragment" : "allow_port == 0"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "==",
              "left" : {
                "type" : "field",
                "value" : ["scalars", "allow_port_0"]
              },
              "right" : {
                "type" : "hexstr",
                "value" : "0x00"
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_teste_r4l332"
        },
        {
          "name" : "node_26",
          "id" : 8,
          "source_info" : {
            "filename" : "p4/teste_r4.p4",
            "line" : 334,
            "column" : 28,
            "source_fragment" : "reg_val_one != 1 || reg_val_two != 1"
          },
          "expression" : {
            "type" : "expression",
            "value" : {
              "op" : "or",
              "left" : {
                "type" : "expression",
                "value" : {
                  "op" : "!=",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "reg_val_one_0"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              },
              "right" : {
                "type" : "expression",
                "value" : {
                  "op" : "!=",
                  "left" : {
                    "type" : "field",
                    "value" : ["scalars", "reg_val_two_0"]
                  },
                  "right" : {
                    "type" : "hexstr",
                    "value" : "0x01"
                  }
                }
              }
            }
          },
          "false_next" : null,
          "true_next" : "tbl_drop_0"
        }
      ]
    },
    {
      "name" : "egress",
      "id" : 1,
      "source_info" : {
        "filename" : "p4/teste_r4.p4",
        "line" : 349,
        "column" : 8,
        "source_fragment" : "MyEgress"
      },
      "init_table" : null,
      "tables" : [],
      "action_profiles" : [],
      "conditionals" : []
    }
  ],
  "checksums" : [
    {
      "name" : "cksum",
      "id" : 0,
      "source_info" : {
        "filename" : "p4/teste_r4.p4",
        "line" : 361,
        "column" : 8,
        "source_fragment" : "update_checksum( ..."
      },
      "target" : ["ipv4", "hdrChecksum"],
      "type" : "generic",
      "calculation" : "calc_3",
      "verify" : false,
      "update" : true,
      "if_cond" : {
        "type" : "expression",
        "value" : {
          "op" : "d2b",
          "left" : null,
          "right" : {
            "type" : "field",
            "value" : ["ipv4", "$valid$"]
          }
        }
      }
    }
  ],
  "force_arith" : [],
  "extern_instances" : [],
  "field_aliases" : [
    [
      "queueing_metadata.enq_timestamp",
      ["standard_metadata", "enq_timestamp"]
    ],
    [
      "queueing_metadata.enq_qdepth",
      ["standard_metadata", "enq_qdepth"]
    ],
    [
      "queueing_metadata.deq_timedelta",
      ["standard_metadata", "deq_timedelta"]
    ],
    [
      "queueing_metadata.deq_qdepth",
      ["standard_metadata", "deq_qdepth"]
    ],
    [
      "intrinsic_metadata.ingress_global_timestamp",
      ["standard_metadata", "ingress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.egress_global_timestamp",
      ["standard_metadata", "egress_global_timestamp"]
    ],
    [
      "intrinsic_metadata.mcast_grp",
      ["standard_metadata", "mcast_grp"]
    ],
    [
      "intrinsic_metadata.egress_rid",
      ["standard_metadata", "egress_rid"]
    ],
    [
      "intrinsic_metadata.priority",
      ["standard_metadata", "priority"]
    ]
  ],
  "program" : "p4/teste_r4.p4",
  "__meta__" : {
    "version" : [2, 23],
    "compiler" : "https://github.com/p4lang/p4c"
  }
}